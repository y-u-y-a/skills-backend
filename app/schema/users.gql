extend type Query {
  allUser: [User]
  findUser(id: Int): User
}
extend type Mutation {
  login(input: LoginInput): LoginUserPayload!
  createUser(input: CreateUserInput!): CreateUserPayload!
  # updateUser(id: Int!): User
  # deleteUser(id: Int!): User
}
type User {
  id: ID
  email: String
  password: String
  name: String
}
"""
input
"""
input CreateUserInput {
  email: String
  password: String
  name: String
}
input LoginInput {
  email: String!
  password: String!
}
"""
payload
"""
type CreateUserPayload {
  user: User
  token: String
  errors: [Error]
}
type LoginUserPayload {
  user: User
}
# 必要ない？
type Error {
  property: String
  messages: [String]
}
